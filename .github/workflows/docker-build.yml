name: docker-build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DO_DEPLOY: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2
      - name: Create env var for docker tag
        run: echo "TAG=$(date +%s)" >> "$GITHUB_ENV"
      - name: Create env var for git sha tag
        run: echo "HASH=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
      - name: Create env var for ECR repo
        run:  echo "ECR_REPOSITORY=self-hosted-github-runner" >> "$GITHUB_ENV"
      - name: Configure AWS Credentials
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
        uses: aws-actions/configure-aws-credentials@v1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build the Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker build . --file Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:${TAG} --tag $ECR_REGISTRY/$ECR_REPOSITORY:latest --tag $ECR_REGISTRY/$ECR_REPOSITORY:${HASH}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          image-ref: '${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.HASH}}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Push docker image to Amazon ECR with all tags
        if: ${{ fromJSON(env.DO_DEPLOY) }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
