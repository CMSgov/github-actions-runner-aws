name: Get latest GitHub Actions Runner

on:
  # schedule:
  #   - cron: '30 9 * * *'
  push:
    branches: [workflow-runner-update]
jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ROBOT_MAC_FC_TOKEN }}
      - name: Set release version and current version variables
        id: get-versions
        run: |
          echo ::set-output name=current_tag::$(grep ACTIONS_VERSION Dockerfile | cut -d'=' -f 2 | sed -e 's/^"//' -e 's/"$//')
          echo ::set-output name=release_tag::$(curl -sL https://api.github.com/repos/actions/runner/releases/latest | jq -r ".tag_name[1:] | tostring")
      - name: Create new branch
        if: ${{ steps.get-versions.outputs.release_tag != steps.get-versions.outputs.current_tag }}
        run: git checkout -b update-actions-runner-to-${{ steps.get-versions.outputs.release_tag }}
      - name: Change release version in Dockerfile
        if: ${{ steps.get-versions.outputs.release_tag != steps.get-versions.outputs.current_tag }}
        id: update-version
        env:
          OLD_VERSION: ${{ steps.get-versions.outputs.current_tag }}
          NEW_VERSION: ${{ steps.get-versions.outputs.release_tag }}
        run: |
          sed -i --expression='s,"'"$OLD_VERSION"'","'"$NEW_VERSION"'",g' Dockerfile
      - name: set up Git
        if: ${{ steps.get-versions.outputs.release_tag != steps.get-versions.outputs.current_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOT_MAC_FC_TOKEN }}
          GITHUB_ACTOR_NAME: "@robot-mac-fc"
          GITHUB_ACTOR_EMAIL: "robot-mac-fc@users.noreply.github.com"
        run: |
          git config --global user.name "${GITHUB_ACTOR_NAME}"
          git config --global user.email "${GITHUB_ACTOR_EMAIL}"
      - name: commit and push changes
        if: ${{ steps.get-versions.outputs.release_tag != steps.get-versions.outputs.current_tag }}
        run: |
          git add Dockerfile
          if output=$(git status --porcelain) && [ ! -z "$output" ]; then
            git commit -m 'Update version'
            git push --set-upstream origin update-actions-runner-to-${{ steps.get-versions.outputs.release_tag }}
          fi
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.ROBOT_MAC_FC_TOKEN }}
          commit-message: Update actions runner to new version
          author: ${GITHUB_ACTOR_NAME} <${GITHUB_ACTOR_EMAIL}>
          delete-branch: true
          title: Update Actions Runner Version to ${{ steps.get-versions.outputs.release_tag }}
          base: main